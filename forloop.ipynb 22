{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "60855d23-03ca-4b64-ba6c-fac968d0ae56",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[23, 34, 45, 56, 78, 90, 98, 76]\n",
      "[23, 34, 45, 56, 'milan', 78, 90, 98, 76]\n"
     ]
    }
   ],
   "source": [
    "m=[23,34,45,56,78,90,98,76]\n",
    "print(m)\n",
    "m.insert(4,\"milan\")\n",
    "print(m)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "00ac8f01-d3b1-42e2-a2c9-c37b0ed011b0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[23, 34, 23, 23, 45, 23, 67, 13, 23, 23, 7623]\n",
      "6\n"
     ]
    }
   ],
   "source": [
    "#count\n",
    "\n",
    "m=[23,34,23,23,45,23,67,13,23,23,7623]\n",
    "print(m)\n",
    "x=m.count(23)\n",
    "print(x)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "ee3d915f-ee2f-4f65-94f0-801d2adfcdc0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[12, 12, 34, 45, 67, 89, 34, 56, 78, 98]\n",
      "12 = 2\n",
      "12 = 2\n",
      "34 = 2\n",
      "45 = 1\n",
      "67 = 1\n",
      "89 = 1\n",
      "34 = 2\n",
      "56 = 1\n",
      "78 = 1\n",
      "98 = 1\n"
     ]
    }
   ],
   "source": [
    "m=[12,12,34,45,67,89,34,56,78,98]\n",
    "print(m)\n",
    "for i in m:\n",
    "    x=m.count(i)\n",
    "    print(i,\"=\",x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "aeada380-6890-460a-ae5b-86a0fa778044",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "original list [12, 23, 34, 45, 56, 78, 89, 12, 23, 34, 4, 45, 56, 67]\n",
      "unique list [12, 23, 34, 45, 56, 78, 89, 4, 67]\n"
     ]
    }
   ],
   "source": [
    "new=[]\n",
    "m=[12,23,34,45,56,78,89,12,23,34,4,45,56,67]\n",
    "for i in m:\n",
    "    if i not in new:\n",
    "        new.append(i)\n",
    "print(\"original list\",m)\n",
    "print(\"unique list\",new)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "862e78e0-c0ca-4190-bb4d-5cb3afc754ac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[34, 45, 56, 67, 78, 98, 12, 1222]\n",
      "[1222, 12, 98, 78, 67, 56, 45, 34]\n"
     ]
    }
   ],
   "source": [
    "# reverse\n",
    "x=[34,45,56,67,78,98,12,1222]\n",
    "print(x)\n",
    "x.reverse()\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "4256d912-2538-4383-997d-8331723e42c6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[12, 43, 65, 45, 67, 87, 1, 45, 98, 44, 566666, 64]\n",
      "[1, 12, 43, 44, 45, 45, 64, 65, 67, 87, 98, 566666]\n",
      "[566666, 98, 87, 67, 65, 64, 45, 45, 44, 43, 12, 1]\n"
     ]
    }
   ],
   "source": [
    "# sort\n",
    "x=[12,43,65,45,67,87,1,45,98,44,566666,64]\n",
    "print(x)\n",
    "x.sort()\n",
    "print(x)\n",
    "x.sort(reverse=True)\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f3a7c927-f45d-469a-a5b7-8b25f9c82ac6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[12, 23, 34, 56, 23, 45]\n",
      "1\n"
     ]
    }
   ],
   "source": [
    "#index\n",
    "x=[12,23,34,56,23,45]\n",
    "print(x)\n",
    "m=x.index(23)\n",
    "print(m)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0f338de6-7ece-411e-af62-08b17e863745",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[12, 23, 34, 45, 56, 77]\n",
      "[12, 23, 34, 45, 56, 77]\n",
      "[12, 23, 34, 'hello', 56, 77]\n",
      "[12, 23, 34, 'hello', 56, 77]\n"
     ]
    }
   ],
   "source": [
    "#copy\n",
    "x=[12,23,34,45,56,77]\n",
    "x1=x\n",
    "print(x)\n",
    "print(x1)\n",
    "x1[3]=\"hello\"\n",
    "print(x)\n",
    "print(x1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "9179c088-2f39-419c-90b3-674844e37276",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[12, 23, 33, 456, 67]\n",
      "[]\n"
     ]
    }
   ],
   "source": [
    "#clear\n",
    "x=[12,23,33,456,67]\n",
    "print(x)\n",
    "x.clear()\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e15493dd-8271-4c77-ad11-ac70324fd3df",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['kishor']\n"
     ]
    }
   ],
   "source": [
    "m=[\"milan\",\"kishor\",\"loke\"]\n",
    "print(m[1:-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "ba14ecae-6b13-4e41-a652-55c9a6c070ea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['milan', 'jasneet', 'kishor', 'milan', 'jasneet', 'kishor']\n"
     ]
    }
   ],
   "source": [
    "x=[\"milan\",\"jasneet\",\"kishor\"]\n",
    "print(x*2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "db5d7010-d250-49d2-a669-0aa17f461cf9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[10, 6, 2]\n"
     ]
    }
   ],
   "source": [
    "x=[1*x for x in range(10,1,-4)]\n",
    "print(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ca253953-72d3-45cb-a2c1-7218e15e8269",
   "metadata": {},
   "outputs": [],
   "source": [
    "t=[1,2,3,4]\n",
    "t1=t\n",
    "t[0]=\"a\""
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
